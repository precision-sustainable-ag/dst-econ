{"version":3,"sources":["components/GoogleMaps.js","components/Home.js","components/Inputs.js","components/FieldAndFarm.js","components/Activity.js","components/Species.js","components/Logic.js","components/Seedbed.js","components/Planting.js","components/Termination.js","components/Tillage.js","components/Fertility.js","components/Herbicide.js","components/Pests.js","components/Erosion.js","components/Additional.js","components/Yield.js","components/Practices.js","components/Revenue.js","components/Resources.js","components/Navigation.js","App.js","defaults.js","reportWebVitals.js","index.js"],"names":["Geocoder","Home","parms","set","id","current","src","alt","style","width","keyPress","e","props","key","obj","document","querySelector","focus","found","querySelectorAll","forEach","activeElement","next","Input","value","Array","isArray","index","type","autoComplete","onKeyPress","onChange","event","target","replace","decimalScale","fixedDecimalScale","prefix","Autocomplete","isFinite","multiple","options","find","option","label","max","Math","apply","map","length","sx","isOptionEqualToValue","renderInput","params","TextField","variant","autocompleteService","GoogleMaps","autoFocus","field","React","useState","location","setValue","inputValue","setInputValue","setOptions","fetch","useMemo","throttle","request","callback","getPlacePredictions","useEffect","active","window","google","maps","places","AutocompleteService","input","results","newOptions","getOptionLabel","description","includeInputInList","filterSelectedOptions","_","newValue","geocode","address","region","status","state","address_components","filter","types","long_name","lat","geometry","toFixed","lon","lng","onInputChange","newInputValue","float","OutlinedInput","className","notched","Icon","inputProps","tabIndex","fontSize","Map","Marker","height","bootstrapURLKeys","center","zoom","mapZoom","onGoogleApiLoaded","yesIWantToUseGoogleMapApiInternals","onClick","latlng","then","response","formatted_address","catch","alert","onZoomAnimationEnd","onMapTypeIdChange","mapType","onLoad","setTimeout","item","setAttribute","mapTypeId","fullscreenControl","scaleControl","mapTypeControl","mapTypeControlOptions","MapTypeControlStyle","HORIZONTAL_BAR","mapTypeIds","FieldAndFarm","rowSpan","autofocus","priorCrop","placeholder","cashCrop","menu","dollars","n","Activity","breakdown","db","data","power","acresHour","implementCost","desc","result","rates","skilled","powerCost","lubrication","fuel","console","log","totalCost","implements","powerUnit","totalImplementCost","totalPowerCost","heading","seedbed","planting","Costs","d","lookup","iCost","pCost","total","relevant","relevantCost","background","color","cname","colSpan","SummaryRow","parm","coverCropTotal","seedbedTotal","plantingTotal","summary","SpeciesRow","species","Other","Brassica","Broadleaf","Grass","Legume","s","includes","groupBy","Species","stateRegions","toUpperCase","ccRegion","toLowerCase","slice","link","Midwest","Northeast","Southern","Western","concat","href","rel","Logic","q","a","cond","suffix","name","checked","test","Seedbed","seedbed1","seedbed2","Object","keys","sort","seedbed3","seedbed4","seedbedAnnualUseAcres","toString","seedbedAnnualUseHours","seedbedAcresHour","seedbedEstimated","Planting","planting3","planting4","plantingAnnualUseAcres","plantingAnnualUseHours","plantingAcresHour","plantingEstimated","Termination","termination2","termination3","herbicides","terminationMethod","terminationUnit","terminationRateUnit","terminationProductCost","Tillage","Fertility","Herbicide","Pests","Erosion","Additional","Yield","Practices","Revenue","Resources","Help","left","helpX","top","helpY","help","dangerouslySetInnerHTML","__html","Screens","onKeyDown","innerHTML","min","pageX","innerWidth","pageY","tagName","scr","dataset","previousScreen","screen","MyMenu","MenuItem","screens","marginLeft","Navigation","back","backDesc","nextDesc","last","mods","Modules","module","Button","title","loadData","table","alias","col","split","json","rec","records","r","fields","cols","c","RF1","coefficients","RF2","RV1","RV2","RV3","RV4","RV5","ee","projected","size1","conversion","divisor","interest","property","insurance","storage","App","updateSpeciesTotal","prices","updateCosts","otype","match","round","costdb","costDefaults","cost","testSeedbed","powerUnits","message","dbvalue","updateTermination","terminationUnitCost","terminationProduct","terminationRate","terminationChemicalCost","terminationTotal","change","p","effects","fnc","arr","defaults","seedList","seedingRate","price","USDARegion","seedbed7","planting7","terminationCustomCost","termination4","seedbedLabor","seedbedFuel","seedbedDepreciation","seedbedInterest","seedbedRepairs","seedbedTaxes","seedbedInsurance","seedbedStorage","seedbedImplementCost","seedbedPowerCost","seedbedPower","plantingLabor","plantingFuel","plantingDepreciation","plantingInterest","plantingRepairs","plantingTaxes","plantingInsurance","plantingStorage","plantingImplementCost","plantingPowerCost","plantingPower","terminationLabor","terminationFuel","terminationDepreciation","terminationInterest","terminationRepairs","terminationTaxes","terminationInsurance","terminationStorage","terminationImplementCost","terminationPowerCost","terminationPower","terminationAnnualUseAcres","terminationAnnualUseHours","terminationAcresHour","terminationEstimated","farm","acres","otherPriorCrop","otherCashCrop","labor","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.20968e84.chunk.js","sourcesContent":["import React from 'react';\r\nimport {TextField, Autocomplete, OutlinedInput, Icon} from '@mui/material';\r\nimport {Input} from './Inputs';\r\nimport throttle from 'lodash/throttle';\r\nimport GoogleMapReact from 'google-map-react';\r\n\r\nconst autocompleteService = { current: null };\r\n\r\nconst GoogleMaps = ({props, parms, set, autoFocus=false, field=false}) => {\r\n  const [location, setValue] = React.useState(parms.location, null);\r\n  const [inputValue, setInputValue] = React.useState('');\r\n  const [options, setOptions] = React.useState([]);\r\n\r\n  const fetch = React.useMemo(\r\n    () =>\r\n      throttle((request, callback) => {\r\n        autocompleteService.current.getPlacePredictions(request, callback);\r\n      }, 200),\r\n    [],\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    let active = true;\r\n\r\n    if (!autocompleteService.current && window.google) {\r\n      autocompleteService.current = new window.google.maps.places.AutocompleteService();\r\n    }\r\n\r\n    if (!autocompleteService.current) {\r\n      return undefined;\r\n    }\r\n\r\n    if (inputValue === '') {\r\n      setOptions(location ? [location] : []);\r\n      return undefined;\r\n    }\r\n\r\n    fetch({ input: inputValue }, (results) => {\r\n      if (active) {\r\n        let newOptions = [];\r\n\r\n        if (location) {\r\n          newOptions = [location];\r\n        }\r\n\r\n        if (results) {\r\n          newOptions = [...newOptions, ...results];\r\n        }\r\n\r\n        setOptions(newOptions);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      active = false;\r\n    };\r\n  }, [location, inputValue, fetch]);\r\n\r\n  return (\r\n    <>\r\n      <Autocomplete\r\n        {...props('location')}\r\n        getOptionLabel={(option) => (typeof option === 'string' ? option : option.description)}\r\n        options={options}\r\n        autoComplete\r\n        includeInputInList\r\n        filterSelectedOptions\r\n        autoFocus={autoFocus}  // not working\r\n\r\n        // getOptionSelected={(option, value) => option.id === value.id}  // avoids warning, per https://stackoverflow.com/a/65347275/3903374, but prevents re-entry of data\r\n        \r\n        onChange={(_, newValue) => {\r\n          setOptions(newValue ? [newValue, ...options] : options);\r\n          if (newValue) {\r\n            set.location(newValue.description);\r\n            setValue(newValue.description);\r\n            const geocoder = new window.google.maps.Geocoder();\r\n\r\n            geocoder.geocode({\r\n              address: newValue.description,\r\n              region: 'en-US',\r\n            }, (results, status) => {\r\n              let state = results ? results[0].address_components.filter(obj => obj.types[0] === 'administrative_area_level_1') : '';\r\n              if (state) {\r\n                state = state[0].long_name;\r\n                set.state(state);\r\n              } else {\r\n                set.state('');\r\n              }\r\n              \r\n              if (results && results[0]) {\r\n                set.lat(results[0].geometry.location.lat().toFixed(4));\r\n                set.lon(results[0].geometry.location.lng().toFixed(4));\r\n              }\r\n            });\r\n          }\r\n        }}\r\n\r\n        onInputChange={(event, newInputValue) => {\r\n          setInputValue(newInputValue);\r\n        }}\r\n\r\n        renderInput={(params) => (\r\n          <>\r\n            <TextField\r\n              {...params}\r\n              label=\"Find your Location\"\r\n              variant=\"outlined\" \r\n              style={{width: field ? '50%' : '100%', float: field ? 'left' : ''}}\r\n            />\r\n          </>\r\n        )}\r\n      />\r\n      \r\n      {\r\n        field &&\r\n        <>\r\n          <OutlinedInput\r\n            className=\"field\"\r\n            label=\"Name your Field\"\r\n            notched={true}\r\n            {...props('field')}\r\n            autoComplete=\"off\"\r\n            style={{width: 'calc(50% - 2em)'}}\r\n          />\r\n          <Icon className=\"moveLeft\">\r\n            help\r\n            <p>\r\n              This input is optional.  If you enter a field name, you'll be able to rerun the model on this computer without re-entering your data.\r\n            </p>\r\n            <p>\r\n              Notes:\r\n            </p>\r\n            <ul>\r\n              <li>If you have multiple fields, you'll be able to select them from a drop-down menu in the upper-right.</li>\r\n              <li>Your information is stored on your computer only.  It will not be uploaded to a server.</li>\r\n              <li>If you clear your browser's cache, you'll need to re-enter your data the next time you run the program.</li>\r\n            </ul>\r\n          </Icon>\r\n        </>\r\n      }\r\n\r\n      <div>\r\n        <small>\r\n          If you know your exact coordinates, you can enter them here:\r\n          &nbsp;\r\n          Latitude:&nbsp;\r\n          <Input {...props('lat')} inputProps={{ tabIndex: -1 }} style={{width: '6em', fontSize: 14}} />\r\n          &nbsp;&nbsp;&nbsp;\r\n          Longitude:&nbsp;\r\n          <Input {...props('lon')} inputProps={{ tabIndex: -1 }} style={{width: '6em', fontSize: 14}}/>\r\n        </small>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst Map = ({set, parms, props, field=false}) => {\r\n  const mapChange = (e) => {\r\n    set.lat(+e.lat.toFixed(4));\r\n    set.lon(+e.lng.toFixed(4));\r\n\r\n    const latlng = {\r\n      lat: e.lat,\r\n      lng: e.lng,\r\n    };\r\n\r\n    Geocoder\r\n      .geocode({ location: latlng })\r\n      .then(response => {\r\n        const results = response.results;\r\n        const location = results[0].formatted_address;\r\n        set.location(location);\r\n\r\n        let state = results ? results[0].address_components.filter(obj => obj.types[0] === 'administrative_area_level_1') : '';\r\n        if (state) {\r\n          state = state[0].long_name;\r\n          set.state(state);\r\n        } else {\r\n          set.state('');\r\n        }\r\n      })\r\n      .catch((e) => window.alert('Geocoder failed due to: ' + e));\r\n  } // mapChange\r\n\r\n  const Marker = () => (\r\n    <img alt=\"marker\" className=\"marker\" src=\"marker.png\" style={{height: '40px'}} />\r\n  )\r\n\r\n  const initGeocoder = ({ maps }) => {\r\n    Geocoder = new maps.Geocoder();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <GoogleMaps set={set} props={props} parms={parms} field={field} />\r\n\r\n      {\r\n        parms.lat && parms.lon &&\r\n        <div style={{ height: '400px', width: '100%' }} id=\"GoogleMap\">\r\n          <GoogleMapReact\r\n            bootstrapURLKeys={{ key: 'AIzaSyD8U1uYvUozOeQI0LCEB_emU9Fo3wsAylg' }}\r\n            center={{lat: +parms.lat, lng: +parms.lon}}\r\n            zoom={parms.mapZoom}\r\n\r\n            onGoogleApiLoaded={initGeocoder}\r\n            \r\n            yesIWantToUseGoogleMapApiInternals\r\n            onClick={mapChange}\r\n            onZoomAnimationEnd={set.mapZoom}\r\n            onMapTypeIdChange={set.mapType}\r\n\r\n            onLoad={\r\n              // prevent tabbing through map\r\n              // got to be a better way than setting a timeout\r\n              setTimeout(() => {\r\n                document.querySelectorAll('#GoogleMap *').forEach(item => item.setAttribute('tabindex', -1));\r\n              }, 1000)\r\n            }\r\n\r\n            options={(map) => ({\r\n              mapTypeId: parms.mapType,\r\n              fullscreenControl: false,\r\n              scaleControl: true,\r\n              mapTypeControl: true,\r\n              mapTypeControlOptions: {\r\n                style: map.MapTypeControlStyle.HORIZONTAL_BAR,\r\n                mapTypeIds: [\r\n                  'roadmap',\r\n                  'satellite',\r\n                  'hybrid',\r\n                  'terrain'\r\n                ]\r\n              },\r\n            })}\r\n          >\r\n            <Marker lat={+parms.lat} lng={+parms.lon} />\r\n          </GoogleMapReact>\r\n        </div>\r\n      }\r\n    </>\r\n  );\r\n} // Map\r\n\r\nlet Geocoder;\r\n\r\nexport default Map;","import {Navigation} from './Navigation';\r\n\r\nconst Home = ({parms, set}) => {\r\n  return (\r\n    <div>\r\n      <h1 id=\"H1\">Economic Decision Aid for Cover Crops</h1>\r\n      <p>Welcome</p>\r\n      <p id=\"D2\">\r\n        <em>This worksheet is for educational purposes only. The user assumes all risks associated with its use.</em>\r\n      </p>\r\n      <Navigation current={Home} parms={parms} set={set} />\r\n      <img src=\"background.png\" alt=\"background\" style={{width: '100%'}} />\r\n    </div>\r\n  )\r\n} // Home\r\n\r\nexport default Home;","import {\n  Input as MUIInput,\n  Autocomplete as MUIAutocomplete,\n  TextField\n} from '@mui/material';\n\nimport NumberFormat from 'react-number-format';\n\nconst focus = (obj) => {\n  if (obj) {\n    document.querySelector('#' + obj).focus();\n  } else {\n    let found = false;\n\n    document.querySelectorAll('input:not([tabIndex=\"-1\"]), select:not([tabIndex=\"-1\"]), button:not([tabIndex=\"-1\"])').forEach(function(obj) {\n      if (found) {\n        obj.focus();\n        found = false;\n      } else if (obj === document.activeElement) {\n        found = true;\n      }\n    });\n  }\n} // focus\n\nconst keyPress = (e, props) => {\n  if (e.key === 'Enter') {\n    focus(props.next);\n  }\n} // keyPress\n\nconst Input = (props) => {\n  let value = props.value;\n  if (Array.isArray(props.value)) {\n    value = props.value[props.index];\n  }\n\n  return (\n    props.type === 'number' ?\n      <NumberFormat\n        autoComplete=\"off\"\n        \n        onKeyPress={(e) => {\n          return keyPress(e, props)\n        }}\n        \n        {...props}\n        \n        value={value}\n\n        onChange={(event) => {\n          const value = event.target.value;\n          props.onChange(event, value, props.index);\n        }}\n\n        type=\"text\"\n      />\n      :\n    props.type === 'dollar' ?\n      <NumberFormat\n        autoComplete=\"off\"\n        \n        onKeyPress={(e) => {\n          return keyPress(e, props)\n        }}\n        \n        {...props}\n        \n        value={value}\n\n        onChange={(event) => {\n          const value = event.target.value;\n          props.onChange(event, value.replace('$', ''), props.index);\n        }}\n\n        decimalScale={2}\n        fixedDecimalScale={true}\n        prefix={'$'}\n    \n        type=\"text\"\n      />\n      :\n      <MUIInput\n        autoComplete=\"off\"\n        \n        onKeyPress={(e) => {\n          return keyPress(e, props)\n        }}\n        \n        {...props}\n\n        value={value}\n\n        onChange={(event, value) => {\n          props.onChange(event, value, props.index);\n        }}\n\n        type=\"text\"\n      />\n  )\n} // Input\n\nconst Autocomplete = (props) => {\n  let value = props.value;\n  if (Array.isArray(props.value) && isFinite(props.index)) {\n    value = props.value[props.index];\n  }\n\n  if (!props.multiple) {\n    value = props.options.find(option => option === value || (option.value && option.value === value) || (option.label && option.label === value));\n    value = value ? value.label || value : null;\n  }\n\n  const max = Math.max.apply(Math, props.options.map(option => option.length));\n\n  return (\n    <MUIAutocomplete\n      onKeyPress={(e) => keyPress(e, props)}\n\n      sx={{width: (max * 0.8) + 'rem'}}\n      isOptionEqualToValue={(option, value) => {\n        return option === value || (option.value && option.value === value) || (option.label && option.label === value);\n      }}\n\n      renderInput={(params) => (\n        <TextField\n          variant=\"standard\"\n          {...params}\n        />\n      )}\n      \n      {...props}\n\n      value={value}\n      \n      onChange={(event, value) => {\n        props.onChange(event, value, props.index);\n      }}\n    />\n  )\n} // Autocomplete\n\nexport {\n  Autocomplete,\n  Input,\n}","import Map from './GoogleMaps';\r\nimport {Navigation} from './Navigation';\r\nimport {Autocomplete, Input} from './Inputs';\r\n\r\nconst FieldAndFarm = ({props, set, parms}) => (\r\n  <div className=\"fieldAndFarm\">\r\n    <h1 id=\"H1\">Economic Decision Aid for Cover Crops: Field and Farm</h1>\r\n    \r\n    <p>\r\n      Our first step with the <strong><em>Cover Crop Economic DST (Decision Support Tool)</em></strong> is to provide basic information on the field you wish to examine.\r\n    </p>\r\n    <p>\r\n      If you are a registered user, this information will be saved to your account but not utilized for any other purpose.\r\n      <br/>\r\n      If you are a guest user, the information will not be saved and cannot be accessed by you again if you close out of the DST.\r\n    </p>\r\n\r\n    <p>\r\n      Please answer all of the following:\r\n    </p>\r\n\r\n    <table className=\"fullWidth\">\r\n      <tbody>\r\n        <tr>\r\n          <td rowSpan=\"6\">\r\n            <strong>Where is your Field located?</strong>\r\n            <p>\r\n              Enter your address or zip code to determine your field's location.<br/>\r\n              You can then zoom in and click to pinpoint it on the map.\r\n            </p>\r\n            <Map set={set} parms={parms} props={props} autofocus/>\r\n          </td>\r\n          <td>\r\n            <strong>What is the name of your Farm?</strong>\r\n            <br/>\r\n            <Input {...props('farm')} />\r\n          </td>\r\n        </tr>\r\n\r\n        <tr>\r\n          <td className=\"hidden\" />\r\n          <td>\r\n            <strong>How many acres are in your Field?</strong>\r\n            <br/>\r\n            <Input {...props('acres')} type=\"number\" />\r\n          </td>\r\n        </tr>\r\n\r\n        <tr>\r\n          <td className=\"hidden\" />\r\n          <td>\r\n            <strong>Which of the following options best describes your Field?</strong>\r\n            <br/>\r\n            <Autocomplete\r\n              {...props('description')}\r\n              options={\r\n                [\r\n                  {label: 'Hill ground; well-drained'  , value: 'hw'},\r\n                  {label: 'Hill ground; poorly-drained', value: 'hp'},\r\n                  {label: 'Bottom land; well-drained'  , value: 'bw'},\r\n                  {label: 'Bottom land; poorly-drained', value: 'bp'},\r\n                ]\r\n              }\r\n            />\r\n          </td>\r\n        </tr>\r\n\r\n        <tr>\r\n          <td className=\"hidden\" />\r\n          <td>\r\n            <strong>What was the Prior Crop planted on this Field?</strong>\r\n            <br/>\r\n            <Autocomplete\r\n              {...props('priorCrop')}\r\n              options={\r\n                [\r\n                  {label: 'Corn'},\r\n                  {label: 'Soybeans'},\r\n                  {label: 'Wheat'},\r\n                  {label: 'Grain Sorghum (milo)'},\r\n                  {label: 'Cotton'},\r\n                  {label: 'Rice'},\r\n                  {label: 'Sunflowers'},\r\n                  {label: 'Canola'},\r\n                  {label: 'Fallow'},\r\n                  {label: 'Prevent Plant Acres'},\r\n                  {label: 'Other'},\r\n                ]\r\n              }\r\n            />\r\n            <br/>\r\n            {\r\n              parms.priorCrop.label === 'Other' && \r\n              <Input {...props('otherPriorCrop')} placeholder=\"Enter crop here\" />\r\n            }\r\n          </td>\r\n        </tr>\r\n\r\n        <tr>\r\n          <td className=\"hidden\" />\r\n          <td>\r\n            <strong>What is your intended Cash Crop for this Field?</strong>\r\n            <br/>\r\n            <Autocomplete\r\n              {...props('cashCrop')} \r\n              options={\r\n                [\r\n                  'Corn',\r\n                  'Soybeans',\r\n                  'Wheat',\r\n                  'Grain Sorghum (milo)',\r\n                  'Cotton',\r\n                  'Rice',\r\n                  'Sunflowers',\r\n                  'Canola',\r\n                  'Other',\r\n                ]\r\n              }\r\n            />\r\n            <br/>\r\n            {\r\n              parms.cashCrop === 'other' && \r\n              <Input {...props('otherCashCrop')} placeholder=\"Enter crop here\" />\r\n            }\r\n          </td>\r\n        </tr>\r\n        \r\n        <tr>\r\n          <td className=\"hidden\" />\r\n          <td>\r\n            <strong>What is your Labor Value for Analysis? ($/hour)</strong>\r\n            <br/>\r\n            <Input \r\n              {...props('labor')}\r\n              type=\"dollar\"\r\n            />\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <Navigation set={set} current={FieldAndFarm} />\r\n  </div>\r\n) // FieldAndFarm\r\n\r\nFieldAndFarm.menu = 'Field and Farm';\r\n\r\nexport default FieldAndFarm;","const dollars = (n) => isFinite(n) ? '$' + (+n).toFixed(2) : '';\r\n\r\nconst Activity = ({db, parms, props, type}) => {\r\n  let breakdown;\r\n\r\n  if (type === 'species') {\r\n    breakdown = '';\r\n  } else {\r\n    let data;\r\n    let power;\r\n    let acresHour;\r\n  \r\n    const implementCost = (desc) => {\r\n      if (parms[type + 'ImplementCost'] === 'false') {\r\n        return 0;\r\n      }\r\n\r\n      let result;\r\n      \r\n      if (data[desc]) {\r\n        result = +data[desc];\r\n      } else {\r\n        result = 0;\r\n      }\r\n  \r\n      if (desc === 'Labor') {\r\n        result *= db.rates.skilled.value;\r\n      }\r\n  \r\n      return result;\r\n    } // implementCost\r\n  \r\n    const powerCost = (desc) => {\r\n      if (parms[type + 'PowerCost'] === 'false') {\r\n        return 0;\r\n      }\r\n\r\n      let result;\r\n  \r\n      result = desc === 'Labor' ? 0 :\r\n               desc === 'Fuel'  ? (power['Fuel'] * (1 + +db.rates.lubrication.value)) * db.rates.fuel.value / acresHour :\r\n                                  power[desc] / acresHour;\r\n      \r\n      if (!result) {\r\n        console.log(desc, power[desc], acresHour)\r\n        console.log(power);\r\n      }\r\n      return result;\r\n    } // powerCost\r\n  \r\n    const totalCost = (desc) => {\r\n      return (implementCost(desc) || 0) + (powerCost(desc) || 0);\r\n    } // totalCost\r\n  \r\n    const relevantCost = (desc, lookup) => {\r\n      return parms[type + desc] === 'true' ? totalCost(desc, lookup) : 0;\r\n    } // relevantCost\r\n  \r\n    data = db.implements[parms[type + 4]] || {};\r\n\r\n    const powerUnit = parms[type + 'Power'] || data['default power unit'];\r\n    power = db.power[powerUnit] || {};\r\n\r\n    acresHour  = (+data['acres/hour']).toFixed(1);\r\n\r\n    const totalImplementCost = () => {\r\n      return (\r\n        (parms[type + 'Labor']        === 'true') * implementCost('Labor') +\r\n        (parms[type + 'Depreciation'] === 'true') * implementCost('Depreciation') + \r\n        (parms[type + 'Interest']     === 'true') * implementCost('Interest') + \r\n        (parms[type + 'Repairs']      === 'true') * implementCost('Repairs') + \r\n        (parms[type + 'Taxes']        === 'true') * implementCost('Taxes') + \r\n        (parms[type + 'Insurance']    === 'true') * implementCost('Insurance') + \r\n        (parms[type + 'Storage']      === 'true') * implementCost('Storage')\r\n      );\r\n    }; // totalImplementCost\r\n\r\n    const totalPowerCost = () => (\r\n      (parms[type + 'Fuel']         === 'true') * powerCost('Fuel') +\r\n      (parms[type + 'Depreciation'] === 'true') * powerCost('Depreciation') + \r\n      (parms[type + 'Interest']     === 'true') * powerCost('Interest') + \r\n      (parms[type + 'Repairs']      === 'true') * powerCost('Repairs') +\r\n      (parms[type + 'Taxes']        === 'true') * powerCost('Taxes') + \r\n      (parms[type + 'Insurance']    === 'true') * powerCost('Insurance') +\r\n      (parms[type + 'Storage']      === 'true') * powerCost('Storage')\r\n    ); // totalPowerCost\r\n\r\n    const heading = {\r\n      seedbed: 'Seedbed Preparation',\r\n      planting: 'Cover Crop Planting',\r\n    }[type];\r\n    \r\n    const Costs = ({desc, lookup}) => {\r\n      const d = desc.replace('Storage shed', 'Storage');\r\n      const iCost = implementCost(d, lookup);\r\n      const pCost = powerCost(d, lookup);\r\n      const total    = '$' + totalCost(d, lookup).toFixed(2);\r\n      const relevant = '$' + relevantCost(d, lookup).toFixed(2);\r\n  \r\n      const style = parms[`${type}${d}`] === 'false' ? {background: '#ddd', color: '#888'}  : {};\r\n  \r\n      return (\r\n        <tr style={style}>\r\n          <td>\r\n            <label><input {...props(`${type}${d}`)} type=\"checkbox\" /> {desc}</label>\r\n          </td>\r\n          <td>{iCost ? '$' + iCost.toFixed(2) : ''}</td>\r\n          <td>{pCost ? '$' + pCost.toFixed(2) : ''}</td>\r\n          <td>{total}</td>\r\n          <td>{relevant}</td>\r\n        </tr>\r\n      )\r\n    } // Costs\r\n\r\n    let cname = type;\r\n    if (parms[`${type}ImplementCost`] === 'false') {\r\n      cname += ' noImplementCost';\r\n    }\r\n\r\n    if (parms[`${type}PowerCost`] === 'false') {\r\n      cname += ' noPowerCost';\r\n    }\r\n\r\n    breakdown = parms[type + 3] !== 'Custom Operator' &&\r\n                parms[type + 4] &&\r\n                parms[type + 'Estimated'] === parms[type + 'Total'] &&\r\n      <div className={cname} id=\"Breakdown\">\r\n        <table id=\"Costs\">\r\n          <thead>\r\n            <tr>\r\n              <th rowSpan=\"2\">Cost Description</th>\r\n              <th colSpan=\"4\">{heading}</th>\r\n              <th className=\"hidden\"></th>\r\n              <th className=\"hidden\"></th>\r\n              <th className=\"hidden\"></th>\r\n            </tr>\r\n            <tr>\r\n              <th className=\"hidden\"></th>\r\n              <th>\r\n                <label>\r\n                  Implement Cost<br/>($/acre)\r\n                  <br/>\r\n                  <input {...props(`${type}ImplementCost`)} type=\"checkbox\"/>\r\n                </label>\r\n              </th>\r\n              <th>\r\n                <label>\r\n                  Power Cost<br/>($/acre)\r\n                  <br/>\r\n                  <input {...props(`${type}PowerCost`)} type=\"checkbox\"/>\r\n                </label>\r\n              </th>\r\n              <th>Actual Cost<br/>($/acre)</th>\r\n              <th>Relevant cost<br/>($/acre)</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <Costs desc=\"Labor\"        lookup=\"Labor\" />\r\n            <Costs desc=\"Fuel\"         lookup=\"\"/>\r\n            <Costs desc=\"Depreciation\" lookup=\"Depreciation\"/>\r\n            <Costs desc=\"Interest\"     lookup=\"Interest\"/>\r\n            <Costs desc=\"Repairs\"      lookup=\"Repairs\"/>\r\n            <Costs desc=\"Taxes\"        lookup=\"Taxes\"/>\r\n            <Costs desc=\"Insurance\"    lookup=\"Insurance\"/>\r\n            <Costs desc=\"Storage shed\" lookup=\"Storage\"/>\r\n            <tr className=\"total\">\r\n              <td>Total</td>\r\n              <td>{'$' + totalImplementCost(type).toFixed(2)}</td>\r\n              <td>{'$' + totalPowerCost(type).toFixed(2)}</td>\r\n              <td>{'$' + (totalImplementCost(type) + totalPowerCost(type)).toFixed(2)}</td>\r\n              <td>{'$' + (+parms[type + 'Estimated']).toFixed(2)}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n  }\r\n\r\n  const SummaryRow = ({parm, desc}) => (\r\n    +parms[parm] ? <tr><td>{desc}</td><td>{dollars(parms[parm])}</td></tr> : null\r\n  ) // SummaryRow\r\n\r\n  const total = +parms.coverCropTotal + +parms.seedbedTotal + +parms.plantingTotal;\r\n\r\n  const summary = (\r\n    total > 0 &&\r\n    <table id=\"Summary\">\r\n      <caption>Summary of Expenses</caption>\r\n      <thead>\r\n        <tr><th>Description</th><th>Expense</th></tr>\r\n      </thead>\r\n      <tbody>\r\n        <SummaryRow parm=\"coverCropTotal\" desc=\"Cover crop seed\" />\r\n        <SummaryRow parm=\"seedbedTotal\"   desc=\"Seedbed preparation\" />\r\n        <SummaryRow parm=\"plantingTotal\"  desc=\"Planting activity\" />\r\n      </tbody>\r\n      <tfoot>\r\n        <tr><td>Total</td><td>{dollars(total)}</td></tr>\r\n      </tfoot>\r\n    </table>\r\n  )\r\n\r\n  return (\r\n    <>\r\n      {summary}\r\n      {breakdown}\r\n    </>\r\n  )\r\n} // Activity\r\n\r\nexport default Activity;","import {Autocomplete, Input} from './Inputs';\r\nimport {Navigation} from './Navigation';\r\nimport Activity from './Activity';\r\n\r\nconst dollars = (n) => isFinite(n) ? '$' + (+n).toFixed(2) : '';\r\n\r\nconst SpeciesRow = ({n, parms, props}) => {\r\n  const species = {\r\n    Other:      ['Commercial mix'],\r\n    Brassica:   ['Brassica, Forage', 'Mustard', 'Radish, Forage', 'Radish, Oilseed', 'Rape, Oilseed, Spring', 'Rape, Oilseed, Winter', 'Rapeseed, Forage', 'Turnip, Forage', 'Turnip, Purple Top'],\r\n    Broadleaf:  ['Buckwheat', 'Phacelia', 'Sunflower'],\r\n    Grass:      ['Barley, Spring', 'Barley, Winter', 'Cereal Rye, Spring', 'Cereal Rye, Winter', 'Millet, Japanese', 'Millet, Pearl', 'Oats', 'Oats, Black', 'Oats, Spring', 'Ryegrass, Annual', 'Ryegrass, Perennial', 'Sorghum', 'Sorghum-sudangrass', 'Sudangrass', 'Teff', 'Triticale, Spring', 'Triticale, Winter', 'Wheat, Spring', 'Wheat, Winter'],\r\n    Legume:     ['Alfalfa, Dormant', 'Clover, Alsike', 'Clover, Balansa', 'Clover, Berseem', 'Clover, Crimson', 'Clover, Red', 'Clover, White', 'Cowpea', 'Pea, Spring', 'Pea, Winter', 'Soybeans', 'Sunn Hemp', 'Sweetclover, Yellow', 'Vetch, Hairy']\r\n  };\r\n\r\n  const options = [\r\n    ...species.Other,\r\n    ...species.Grass,\r\n    ...species.Legume,\r\n    ...species.Brassica,\r\n    ...species.Broadleaf,\r\n  ].filter(s => s === parms.species[n] || !parms.species.includes(s));\r\n\r\n  return (\r\n    <tr>\r\n      <td>\r\n        <Autocomplete\r\n          {...props('species')}\r\n          index={n}\r\n          groupBy={\r\n            (option) => species.Other.includes(option)     ? '-' :\r\n                        species.Brassica.includes(option)  ? 'Brassica' :\r\n                        species.Broadleaf.includes(option) ? 'Broadleaf' :\r\n                        species.Grass.includes(option)     ? 'Grass' :\r\n                        species.Legume.includes(option)    ? 'Legume' :\r\n                                                             'ERROR'\r\n          }\r\n          \r\n          options={options}\r\n        />\r\n      </td>\r\n      <td>\r\n        <Input\r\n          type=\"number\"\r\n          {...props('rates')}\r\n          index={n}\r\n        />\r\n      </td>\r\n      <td>\r\n        <Input\r\n          type=\"dollar\"\r\n          {...props('prices')}\r\n          index={n}\r\n        />\r\n      </td>\r\n    </tr>\r\n  )\r\n} // SpeciesRow\r\n\r\nconst Species = ({set, db, parms, props}) => {\r\n//  let total = 0;\r\n//\r\n//  parms.species\r\n//    .forEach((s, n) => {\r\n//      if (s) {\r\n//        total += (+parms.rates[n] || 0) * (+parms.prices[n] || 0)\r\n//      }\r\n//    });\r\n//\r\n//  set.coverCropTotal(total);\r\n\r\n  let rec = db.stateRegions[parms.state.toUpperCase()];\r\n  let region = rec ? db.stateRegions[parms.state.toUpperCase()].ccRegion.toLowerCase() : '';\r\n  if (region) {\r\n    region = region[0].toUpperCase() + region.slice(1);\r\n  }\r\n  const link = {\r\n    Midwest:    'https://mccc.msu.edu/selector-tool/',\r\n    Northeast:  'http://northeastcovercrops.com/decision-tool/',\r\n    Southern:   'https://southerncovercrops.org/cover-crop-resource-guide/',\r\n    Western:    'https://westerncovercrops.org/category/resources/selection/'\r\n  }[region];\r\n\r\n  return (\r\n    <>\r\n      <div className=\"Species\">\r\n        <h1 id=\"H1\">Economic Decision Aid for Cover Crops: Species Selection</h1>\r\n\r\n        <div id=\"About\">\r\n          <p>In this section, you will select a cover crop and seeding rates as well as an estimated cost of the cover crop seed ($/pound).</p>\r\n\r\n          <p>A common strategy for selecting a cover crop is to base your decision upon the need for a specific change you wish to make in a field or farm.  For example, if you wish to build soil organic matter you may want to select a cover crop with high levels of biomass and a fibrous root structure.  Options exist to mitigate soil erosion, create grazing opportunities, and to decrease weed pressure.   If you already know which cover crop you wish to consider, please select from the drop-down menu.  If you are new to the use of cover crops or still have questions, please consider using the [Cover Crop Council LINK or the Cover Crop Selection Tool LINK].</p>\r\n\r\n          <p>After selecting a cover crop species, please select a seeding rate.  Seeding rate selection will depend upon whether you are using a single species or a mix.  In addition, you may adjust seeding rates even for single species based upon your intended purpose.  For example, you may use a lower seeding rate of cereal rye if you only seek help with erosion control, but may plant a higher rate if you seek to maximize grazing potential.  You may use the common rate listed in the grey shaded boxes or input your own rate.  If you wish to learn more about possible seeding rates, consider using the \"Cover Crop Seeding Rate Calculator\".</p>\r\n\r\n          <p>Prices for cover crops may vary widely based upon your geography and availability from season to season.  You may utilize the default value or enter specific pricing from your region.</p>\r\n        </div>\r\n\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th colSpan=\"3\">User Input</th>\r\n              <td className=\"hidden\"></td>\r\n              <td className=\"hidden\"></td>\r\n            </tr>\r\n            <tr>\r\n              <th>Cover Crop Species</th>\r\n              <th>Seeding Rate<br/>(lb/ac)</th>\r\n              <th>Price<br/>($/lb)</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {\r\n              [].concat(parms.species).map((s, n) => \r\n                s &&\r\n                <SpeciesRow key={s} n={n} parms={parms} props={props} />\r\n              )\r\n            }\r\n            <SpeciesRow key={`row${parms.species.length}`} n={parms.species.length} parms={parms} props={props} />\r\n            <tr>\r\n              <td colSpan=\"2\"><strong>Cost of Cover crop seed ($/acre)</strong></td>\r\n              <td className=\"hidden\"></td>\r\n              <td><strong>{dollars(parms.coverCropTotal)}</strong></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        \r\n        {\r\n          link &&\r\n          <a href={link} target=\"_blank\" rel=\"noreferrer\">\r\n            {region} Cover Crops Council Species Selector\r\n          </a>\r\n        }\r\n\r\n      </div>\r\n      <Navigation set={set} current={Species} />\r\n      <Activity db={db} parms={parms} props={props} set={set} type=\"species\" />\r\n    </>\r\n  )\r\n} // Species\r\n\r\nSpecies.menu = 'Cover Crop selection';\r\n\r\nexport default Species;","import {Autocomplete, Input} from './Inputs';\r\n\r\nconst Logic = ({q, a, id, cond=true, props, parms, suffix=''}) => {\r\n  return (\r\n    cond && \r\n    <tr className={id}>\r\n      <td>{q}</td>\r\n      <td>\r\n        {\r\n          Array.isArray(a) ?\r\n            a.length < 3 ? \r\n            <>\r\n              {\r\n                a.map(a => (\r\n                  <label key={a}>\r\n                    <input\r\n                      {...props(id)}\r\n                      key={a} type=\"radio\" name={id} value={a} checked={a === parms[id]}\r\n                    />{a}\r\n                    <br/>\r\n                  </label>\r\n                ))\r\n              }\r\n            </>\r\n            :\r\n            <Autocomplete\r\n              {...props(id)}\r\n              options={a}\r\n            />\r\n          :\r\n          \r\n          /number|dollar/.test(a) ?\r\n            <Input \r\n              type={a}\r\n              {...props(id)} \r\n            /> \r\n          :\r\n          \r\n          typeof a === 'string' ? \r\n            a\r\n          :\r\n          \r\n          isFinite(a) ? \r\n            '$' + (+a).toFixed(2)\r\n          :\r\n          \r\n          ''\r\n        }\r\n        {' ' + suffix}\r\n      </td>\r\n    </tr>\r\n  )\r\n} // Logic\r\n\r\nexport default Logic;","import Activity from './Activity';\r\nimport {Navigation} from './Navigation';\r\nimport Logic from './Logic';\r\n\r\nconst dollars = (n) => isFinite(n) ? '$' + (+n).toFixed(2) : '';\r\n\r\nconst Seedbed = ({db, parms, props, set}) => {\r\n  return (\r\n    <>\r\n      <div>\r\n        <h1>Economic Decision Aid for Cover Crops: Seedbed Preparation</h1>\r\n        <div id=\"About\">\r\n          Decisions surrounding cover crop decisions require understanding how they will be impacted by the prior cash crop.\r\n          Only activities that are incurred because a cover crop is planted are charged to the cover crop.\r\n          If you were going to do the activity without planting a cover crop, its cost is not considered a cost of growing the cover crop.\r\n        </div>\r\n        <hr/>\r\n\r\n        <strong>Cover Crop Establishment</strong>\r\n        <table className=\"seedbed\">\r\n          <tbody>\r\n            <tr>\r\n              <th colSpan=\"2\">Seedbed preparation</th>\r\n            </tr>\r\n            \r\n            <Logic\r\n              id=\"seedbed1\"\r\n              q=\"Will you do cover crop seedbed preparation prior to planting the cover crop?\"\r\n              a={['Yes', 'No']}\r\n              parms={parms}\r\n              props={props}\r\n            />\r\n\r\n            <Logic\r\n              id=\"seedbed2\"\r\n              q=\"Would you do this field activity if not planting a cover crop?\"\r\n              a={['Yes', 'No']}\r\n              parms={parms}\r\n              cond={parms.seedbed1 === 'Yes'}\r\n              props={props}\r\n            />\r\n\r\n            <Logic\r\n              id=\"seedbed3\"\r\n              q=\"Who will do this activity?\"\r\n              a={['Self', 'Custom Operator']}\r\n              parms={parms}\r\n              cond={parms.seedbed1 === 'Yes' && parms.seedbed2 === 'No'}\r\n              props={props}\r\n            />\r\n\r\n            <Logic\r\n              id=\"seedbed4\"\r\n              q=\"What type of seedbed preparation will be done?\"\r\n              a={['', ...Object.keys(db.implements).filter(key => db.implements[key].type === 'Tillage').sort()]}\r\n              parms={parms}\r\n              cond={parms.seedbed1 === 'Yes' && parms.seedbed2 === 'No' && parms.seedbed3 === 'Self'}\r\n              props={props}\r\n            />\r\n\r\n            <Logic\r\n              id=\"seedbedPower\"\r\n              q=\"What power will be used?\"\r\n              a={['', ...Object.keys(db.power)]}\r\n              parms={parms}\r\n              props={props}\r\n              cond={parms.seedbed4 && parms.seedbed3 === 'Self'}\r\n            />\r\n\r\n            <Logic\r\n              id=\"seedbedAnnualUseAcres\"\r\n              q=\"Annual Use (acres on implement)\"\r\n              a={parms.seedbedAnnualUseAcres.toString()}\r\n              parms={parms}\r\n              props={props}\r\n              cond={parms.seedbed4 && parms.seedbed3 === 'Self'}\r\n            />\r\n\r\n            <Logic\r\n              id=\"seedbedAnnualUseHours\"\r\n              q=\"Annual Use (hours on power)\"\r\n              a={parms.seedbedAnnualUseHours.toString()}\r\n              parms={parms}\r\n              props={props}\r\n              cond={parms.seedbed4 && parms.seedbed3 === 'Self'}\r\n            />\r\n\r\n            <Logic\r\n              id=\"seedbedAcresHour\"\r\n              q=\"Acres/hour\"\r\n              a={parms.seedbedAcresHour.toString()}\r\n              parms={parms}\r\n              props={props}\r\n              cond={parms.seedbed4 && parms.seedbed3 === 'Self'}\r\n            />\r\n\r\n            <Logic\r\n              id=\"seedbedTotal\"\r\n              q={parms.seedbed3 === 'Self' ? `Estimated relevant cost (${dollars(parms.seedbedEstimated)}/acre)` : `Estimated custom cost (${dollars(parms.seedbedTotal)}/acre)`}\r\n              a={'dollar'}\r\n              parms={parms}\r\n              cond={parms.seedbed1 === 'Yes' && parms.seedbed2 === 'No'}\r\n              props={props}\r\n            />\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <Navigation set={set} current={Seedbed} />\r\n\r\n      <Activity db={db} parms={parms} props={props} set={set} type=\"seedbed\" />\r\n    </>\r\n  )\r\n} // Seedbed\r\n\r\nSeedbed.menu = 'Seedbed preparation';\r\n\r\nexport default Seedbed;","import Activity from './Activity';\r\nimport {Navigation} from './Navigation';\r\nimport Logic from './Logic';\r\n\r\nconst dollars = (n) => isFinite(n) ? '$' + (+n).toFixed(2) : '';\r\n\r\nconst Planting = ({db, parms, props, set}) => {\r\n  return (\r\n    <>\r\n      <div className=\"Planting\">\r\n        <h1>Economic Decision Aid for Cover Crops: Planting Decisions</h1>\r\n        <div id=\"About\">\r\n          Decisions surrounding cover crop decisions require understanding how they will be impacted by the prior cash crop.\r\n          Only activities that are incurred because a cover crop is planted are charged to the cover crop.\r\n          If you were going to do the activity without planting a cover crop, its cost is not considered a cost of growing the cover crop.\r\n        </div>\r\n        <hr/>\r\n\r\n        <strong>Cover Crop Establishment</strong>\r\n        <table className=\"planting\">\r\n          <tbody>\r\n            <tr>\r\n              <th colSpan=\"2\">Planting</th>\r\n            </tr>\r\n\r\n            <Logic\r\n              id=\"planting3\"\r\n              q=\"Who will do this activity?\"\r\n              a={['Self', 'Custom Operator']}\r\n              parms={parms}\r\n              props={props}\r\n            />\r\n\r\n            <Logic\r\n              id=\"planting4\"\r\n              q=\"What type of seedbed preparation will be done?\"\r\n              a={['', ...Object.keys(db.implements).filter(key => db.implements[key].type === 'Planting').sort()]}\r\n              parms={parms}\r\n              props={props}\r\n              cond={parms.planting3 === 'Self'}\r\n            />\r\n\r\n            <Logic\r\n              id=\"plantingPower\"\r\n              q=\"What power will be used?\"\r\n              a={['', ...Object.keys(db.power)]}\r\n              parms={parms}\r\n              props={props}\r\n              cond={parms.planting4 && parms.planting3 === 'Self'}\r\n            />\r\n\r\n            <Logic\r\n              id=\"plantingAnnualUseAcres\"\r\n              q=\"Annual Use (acres on implement)\"\r\n              a={parms.plantingAnnualUseAcres.toString()}\r\n              parms={parms}\r\n              props={props}\r\n              cond={parms.planting4 && parms.planting3 === 'Self'}\r\n            />\r\n\r\n            <Logic\r\n              id=\"plantingAnnualUseHours\"\r\n              q=\"Annual Use (hours on power)\"\r\n              a={parms.plantingAnnualUseHours.toString()}\r\n              parms={parms}\r\n              props={props}\r\n              cond={parms.planting4 && parms.planting3 === 'Self'}\r\n            />\r\n\r\n            <Logic\r\n              id=\"plantingAcresHour\"\r\n              q=\"Acres/hour\"\r\n              a={parms.plantingAcresHour.toString()}\r\n              parms={parms}\r\n              props={props}\r\n              cond={parms.planting4 && parms.planting3 === 'Self'}\r\n            />\r\n\r\n            <Logic\r\n              id=\"plantingTotal\"\r\n              q={parms.planting3 === 'Self' ? `Estimated relevant cost (${dollars(parms.plantingEstimated)}/acre)` : `Estimated custom cost (${dollars(parms.plantingTotal)}/acre)`}\r\n              a={'dollar'}\r\n              parms={parms}\r\n              props={props}\r\n            />\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <Navigation set={set} current={Planting} />\r\n\r\n      <Activity db={db} parms={parms} props={props} set={set} type=\"planting\" />\r\n    </>\r\n  )\r\n} // Planting\r\n\r\nPlanting.menu = 'Planting decisions';\r\n\r\nexport default Planting;","import Activity from './Activity';\r\nimport {Navigation} from './Navigation';\r\nimport Logic from './Logic';\r\n\r\nconst Termination = ({db, parms, props, set}) => (\r\n  <div className=\"Termination\">\r\n    <h1>Economic Decision Aid for Cover Crops: Termination</h1>\r\n    <strong>Cover Crop Establishment</strong>\r\n    <table className=\"termination\">\r\n      <tbody>\r\n        <tr>\r\n          <th colSpan=\"2\">Termination</th>\r\n        </tr>\r\n        \r\n        <Logic\r\n          id=\"termination2\"\r\n          q=\"Would you do this field activity if you did not have a cover crop?\"\r\n          a={['Yes', 'No']}\r\n          parms={parms}\r\n          props={props}\r\n        />\r\n\r\n        <Logic\r\n          id=\"termination3\"\r\n          q=\"Who will do this activity?\"\r\n          a={['Self', 'Custom Operator']}\r\n          cond={parms.termination2 === 'No'}\r\n          parms={parms}\r\n          props={props}\r\n        />\r\n\r\n        <Logic\r\n          id=\"terminationMethod\"\r\n          q=\"Cover Crop termination method\"\r\n          a={['', 'Herbicide application', 'Roller', 'Roller with follow-up chemical', 'Mechanical termination']}\r\n          parms={parms}\r\n          cond={parms.termination2 === 'No' && parms.termination3 === 'Self'}\r\n          props={props}\r\n        />\r\n\r\n        <Logic\r\n          id=\"terminationProduct\"\r\n          q=\"Product\"\r\n          a={['', ...Object.keys(db.herbicides).sort()]}\r\n          parms={parms}\r\n          cond={parms.termination2 === 'No' && parms.termination3 === 'Self' && parms.terminationMethod === 'Herbicide application'}\r\n          props={props}\r\n        />\r\n\r\n        <Logic\r\n          id=\"terminationUnitCost\"\r\n          q=\"Cost per unit of product\"\r\n          a={'dollar'}\r\n          parms={parms}\r\n          cond={parms.termination2 === 'No' && parms.termination3 === 'Self' && (/Herbicide application|Roller with follow-up chemical/.test(parms.terminationMethod))}\r\n          props={props}\r\n          suffix={parms.terminationUnit}\r\n        />\r\n\r\n        <Logic\r\n          id=\"terminationRate\"\r\n          q=\"Application rate\"\r\n          a={'number'}\r\n          parms={parms}\r\n          cond={parms.termination2 === 'No' && parms.termination3 === 'Self' && (/Herbicide application|Roller with follow-up chemical/.test(parms.terminationMethod))}\r\n          props={props}\r\n          suffix={parms.terminationRateUnit}\r\n        />\r\n\r\n        <Logic\r\n          id=\"terminationProductCost\"\r\n          q=\"Product cost\"\r\n          a={parms.terminationProductCost}\r\n          parms={parms}\r\n          cond={parms.termination2 === 'No' && parms.termination3 === 'Self' && (/Herbicide application|Roller with follow-up chemical/.test(parms.terminationMethod))}\r\n          props={props}\r\n        />\r\n\r\n        <Logic\r\n          id=\"terminationCustomCost\"\r\n          q=\"Custom operator cost ($/acre)\"\r\n          a={'dollar'}\r\n          parms={parms}\r\n          cond={parms.termination3 === 'Custom Operator'}\r\n          props={props}\r\n        />\r\n\r\n        <Logic\r\n          id=\"termination4\"\r\n          q=\"What chemical spray equipment will be used?\"\r\n          a={['', ...Object.keys(db.implements).filter(key => db.implements[key].type === 'Chemical').sort()]}\r\n          parms={parms}\r\n          cond={parms.termination3 === 'Self'}\r\n          props={props}\r\n        />\r\n\r\n        <Logic\r\n          id=\"terminationChemicalCost\"\r\n          q=\"Chemical spray equipment cost ($/acre)\"\r\n          a={'dollar'}\r\n          parms={parms}\r\n          cond={parms.termination3 === 'Self'}\r\n          props={props}\r\n        />\r\n      </tbody>\r\n    </table>\r\n    <Navigation set={set} current={Termination} />\r\n\r\n    <Activity db={db} parms={parms} props={props} set={set} type=\"termination\" />\r\n  </div>\r\n) // Termination\r\n\r\nexport default Termination;","import {Navigation} from './Navigation';\r\n\r\nconst Tillage = ({set}) => (\r\n  <div className=\"Tillage\">\r\n    <h1>Economic Decision Aid for Cover Crops: Tillage</h1>\r\n    <Navigation set={set} current={Tillage} />\r\n  </div>\r\n) // Tillage\r\n\r\nexport default Tillage;","import {Navigation} from './Navigation';\r\n\r\nconst Fertility = ({set}) => (\r\n  <div className=\"Fertility\">\r\n    <h1>Economic Decision Aid for Cover Crops: Fertility</h1>\r\n    <Navigation set={set} current={Fertility} />\r\n\r\n  </div>\r\n) // Fertility\r\n\r\nexport default Fertility;","import {Navigation} from './Navigation';\r\n\r\nconst Herbicide = ({set}) => (\r\n  <div className=\"Herbicide\">\r\n    <h1>Economic Decision Aid for Cover Crops: Herbicide</h1>\r\n    <Navigation set={set} current={Herbicide} />\r\n  </div>\r\n) // Herbicide\r\n\r\nexport default Herbicide;","import {Navigation} from './Navigation';\r\n\r\nconst Pests = ({set}) => (\r\n  <div className=\"Pests\">\r\n    <h1>Economic Decision Aid for Cover Crops: Pests</h1>\r\n    <Navigation set={set} current={Pests} />\r\n  </div>\r\n) // Pests\r\n\r\nexport default Pests;","import {Navigation} from './Navigation';\r\n\r\nconst Erosion = ({set}) => (\r\n  <div className=\"Erosion\">\r\n    <h1>Economic Decision Aid for Cover Crops: Soil Erosion Control</h1>\r\n    <Navigation set={set} current={Erosion} />\r\n  </div>\r\n) // Erosion\r\n\r\nErosion.menu = 'Soil erosion control';\r\n\r\nexport default Erosion;","import {Navigation} from './Navigation';\r\n\r\nconst Additional = ({set}) => (\r\n  <div className=\"Additional\">\r\n    <h1>Economic Decision Aid for Cover Crops: Additional Considerations</h1>\r\n    <Navigation set={set} current={Additional} />\r\n  </div>\r\n) // Additional\r\n\r\nAdditional.menu = 'Additional considerations';\r\n\r\nexport default Additional;","import {Navigation} from './Navigation';\r\n\r\nconst Yield = ({set}) => (\r\n  <div className=\"Yield\">\r\n    <h1>Economic Decision Aid for Cover Crops: Yield</h1>\r\n    <Navigation set={set} current={Yield} />\r\n  </div>\r\n) // Yield\r\n\r\nexport default Yield;","import {Navigation} from './Navigation';\r\n\r\nconst Practices = ({set}) => (\r\n  <div className=\"Practices\">\r\n    <h1>Economic Decision Aid for Cover Crops: Summary of Practices</h1>\r\n    <Navigation set={set} current={Practices} />\r\n  </div>\r\n) // Practices\r\n\r\nPractices.menu = 'Summary of Practices';\r\n\r\nexport default Practices;","import {Navigation} from './Navigation';\r\n\r\nconst Revenue = ({set}) => (\r\n  <div className=\"Revenue\">\r\n    <h1>Economic Decision Aid for Cover Crops: Revenue Impact</h1>\r\n    <Navigation set={set} current={Revenue} />\r\n  </div>\r\n) // Revenue\r\n\r\nRevenue.menu = 'Revenue Impact';\r\n\r\nexport default Revenue;","import {Navigation} from './Navigation';\r\n\r\nconst Resources = ({set, parms}) => (\r\n  <div className=\"Resources\">\r\n    <h1>Economic Decision Aid for Cover Crops: Resources</h1>\r\n    <p>\r\n      If you already use cover crops on your farm, you know that implementing cover crops into your rotation is unique to your farm and individual perspective.\r\n      Multiple years of experience will be valuable to an overall farm strategy.\r\n      However, the resources listed below can supplement your on-farm experience and help guide your decision-making.  \r\n    </p>\r\n\r\n    <ul>\r\n      <li>Field and Farm</li>\r\n      <li>Cover Crop selection</li>\r\n      <li>Planting decisions</li>\r\n      <li>Termination</li>\r\n      <li>Tillage</li>\r\n      <li>Fertility</li>\r\n      <li>Herbicide</li>\r\n      <li>Pests</li>\r\n      <li>Soil erosion control</li>\r\n      <li>Additional considerations</li>\r\n      <li>Yield</li>\r\n    </ul>\r\n\r\n    <Navigation set={set} current={Resources} parms={parms} />\r\n  </div>\r\n) // Resources\r\n\r\nexport default Resources;","import React from 'react';\r\nimport {MenuItem, Button} from '@mui/material';\r\n\r\n// Screens\r\nimport Home         from './Home';\r\nimport FieldAndFarm from './FieldAndFarm';\r\nimport Species      from './Species';\r\nimport Seedbed      from './Seedbed';\r\nimport Planting     from './Planting';\r\nimport Termination  from './Termination';\r\nimport Tillage      from './Tillage';\r\nimport Fertility    from './Fertility';\r\nimport Herbicide    from './Herbicide';\r\nimport Pests        from './Pests';\r\nimport Erosion      from './Erosion';\r\nimport Additional   from './Additional';\r\nimport Yield        from './Yield';\r\nimport Practices    from './Practices';\r\nimport Revenue      from './Revenue';\r\nimport Resources    from './Resources';\r\n\r\nconst Help = ({parms}) => {\r\n  const style = {\r\n    left: parms.helpX,\r\n    top: parms.helpY\r\n  }\r\n\r\n  return (\r\n    parms.help &&\r\n    <div\r\n      className=\"help\"\r\n      style={style}\r\n      dangerouslySetInnerHTML={{ __html: parms.help }}\r\n    />\r\n  )\r\n} // Help\r\n\r\nconst Screens = ({parms, set, db, props}) => {\r\n  const changeScreen = (e) => {\r\n    const menu = e.target;\r\n\r\n    if (menu.tagName === 'LI') {\r\n      const scr = menu.dataset.scr;\r\n      if (scr !== 'Resources') {\r\n        set.previousScreen(scr);\r\n      }\r\n      set.screen(scr);\r\n    }\r\n  } // changeScreen\r\n\r\n  const find = (screens, scr) => {\r\n    let result = screens[scr];\r\n\r\n    if (!result) {\r\n      for (let s in screens) {\r\n        if (typeof screens[s] === 'object') {\r\n          result = find(screens[s], scr);\r\n          if (result) {\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    // console.log(result);\r\n    return result;\r\n  } // find\r\n\r\n  const MyMenu = (s) => {\r\n    return (\r\n      Object.keys(s).map(scr => {\r\n        if (typeof s[scr] === 'object') {\r\n          return <strong key={scr}>{scr} {MyMenu(s[scr])}</strong>\r\n        } else {\r\n          return <MenuItem data-scr={scr} key={scr} className={scr === parms.screen ? 'selected' : ''}>{s[scr].menu || scr}</MenuItem>\r\n        }\r\n      })\r\n    )\r\n  } // MyMenu\r\n\r\n//  let [changed, setChanged] = React.useState(false);\r\n//\r\n//  useEffect(() => {\r\n//    document.querySelectorAll('.size').forEach(el => {\r\n//      let fs = parseInt(window.getComputedStyle(el, null).getPropertyValue('font-size')) - 1;\r\n//\r\n//      if (el.scrollHeight > el.clientHeight) {\r\n//        el.style.fontSize = fs + 'px';\r\n//        setChanged(!changed);\r\n//      }\r\n//    })\r\n//  });\r\n//\r\n//  const [styleSheet, setStylesheet] = useState('');\r\n//\r\n//  useEffect(() => {\r\n//    fetch(`${parms.screen}.txt`)\r\n//      .then(response => response.text())\r\n//      .then(layout => {\r\n//        if (/DOCTYPE/.test(layout)) return;\r\n//\r\n//        let css = '';\r\n//        layout\r\n//          .replace(/^[\\n\\r]/, '')\r\n//          .split(/[\\n\\r]|[\\r\\n]|\\r|\\n/)\r\n//          .forEach((s, row) => {\r\n//            return\r\n//            /*\r\n//            const m = s.match(/[\\w|:]+/g);\r\n//            const top = Math.round(row * 1.4);\r\n//    \r\n//            if (m) {\r\n//              m.forEach((id, i) => {\r\n//                const left = s.indexOf(id) * 0.75 + 13;\r\n//                let other = '';\r\n//                let sp = id.split('|');\r\n//\r\n//                id = sp[0];\r\n//    \r\n//                sp.forEach(s => {\r\n//                  if (/^\\d+x\\d+$/.test(s)) {\r\n//                    const [width, height] = s.split('x');\r\n//                    other += `\r\n//                      width: ${width}vw;\r\n//                      height: ${height}vh;\r\n//                    `;\r\n//                    return;  // affects elements on other screens even if they have different IDs!!!\r\n//                    document.querySelector(`#${id}`).className = 'size';\r\n//                  } else if (/^bg:/.test(s)) {\r\n//                    other += `\r\n//                      background: ${s.split(':')[1]};\r\n//                    `;\r\n//                  } else if (s === 'center') {\r\n//                    other += `\r\n//                      position: relative;\r\n//                      left: 50%;\r\n//                      transform: translateX(-50%);\r\n//                      text-align: center;\r\n//                    `;\r\n//                  }\r\n//                });\r\n//\r\n//                css += `#${id} {\r\n//                  position: absolute;\r\n//                  left: ${left}vw;\r\n//                  top: ${top}vh;\r\n//                  ${other}\r\n//                }\r\n//                `;\r\n//              });\r\n//            }\r\n//            */\r\n//          });\r\n//    \r\n//        setStylesheet(css);\r\n//        console.log(css);\r\n//      })\r\n//  }, [parms.screen]);\r\n\r\n  return (\r\n    <div\r\n      onKeyDown={(e) => {\r\n        if (e.key === 'Escape') {\r\n          set.help('');\r\n        }\r\n      }}\r\n\r\n      onClick={(e) => {\r\n        if (/^help/.test(e.target.innerHTML)) {\r\n          set.help(e.target.innerHTML.slice(4));\r\n          set.helpX(Math.min(e.pageX + 20, window.innerWidth - 400));\r\n          set.helpY(e.pageY - 20);\r\n        } else {\r\n          set.help('');\r\n        }\r\n      }}\r\n\r\n      id=\"Main\"\r\n    >\r\n      { /* <style>{styleSheet}</style> */ }\r\n\r\n      <nav onClick={changeScreen}>\r\n        {MyMenu(screens)}\r\n      </nav>\r\n      \r\n      <Help parms={parms} />\r\n\r\n      <div style={{marginLeft: '15em', width: 'calc(100vw - 30em)'}}>\r\n        {find(screens, parms.screen)({\r\n          props,\r\n          set,\r\n          parms,\r\n          db\r\n        })}\r\n      </div>\r\n    </div>\r\n  )\r\n} // Screens\r\n\r\nconst Navigation = ({parms={}, set, current }) => {\r\n  let last = 'Home';\r\n  let back;\r\n  let backDesc;\r\n  let next;\r\n  let nextDesc;\r\n  let found;\r\n\r\n  const mods = {Home, ...screens.Modules, ...screens['Economic Impact'], Resources};\r\n\r\n  for (let module in mods) {\r\n    if (found) {\r\n      next = module;\r\n      nextDesc = mods[module].menu || module;\r\n      break;\r\n    } else if (mods[module] === current) {\r\n      if (current !== Home) {\r\n        back = last;\r\n        backDesc = mods[last].menu || last;\r\n      }\r\n      found = true;\r\n    } else {\r\n      last = module;\r\n    }\r\n  };\r\n\r\n  if (current === Resources) {\r\n    back = parms.previousScreen;\r\n    backDesc = mods[back].menu || back;\r\n  }\r\n\r\n  return (\r\n    <div className=\"navigation\">\r\n      {\r\n        back &&\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={() => {\r\n            set.screen(back);\r\n            set.previousScreen(back);\r\n          }}\r\n          tabIndex={-1}\r\n        >\r\n          BACK: {backDesc}\r\n        </Button>\r\n      }\r\n      {\r\n        next &&\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\" \r\n          onClick={() => {\r\n            set.screen(next);\r\n            if (next !== 'Resources') set.previousScreen(next);\r\n          }}\r\n        >\r\n          NEXT: {nextDesc}\r\n        </Button>\r\n      }\r\n\r\n      {\r\n        current !== Resources && next !== 'Resources' &&\r\n        <Button variant=\"contained\" color=\"primary\" onClick={() => set.screen('Resources') }>Resources </Button>\r\n      }\r\n    </div>\r\n  )\r\n} // Navigation\r\n\r\nconst screens = {\r\n  Home,\r\n  Modules: {\r\n    FieldAndFarm,\r\n    Species,\r\n    Seedbed,\r\n    Planting,\r\n    Termination,\r\n    Tillage,\r\n    Fertility,\r\n    Herbicide,\r\n    Pests,\r\n    Erosion,\r\n    Additional,\r\n    Yield,\r\n  },\r\n  'Economic Impact': {\r\n    Practices,\r\n    Revenue\r\n  },\r\n  Resources\r\n};\r\n\r\nexport {\r\n  Navigation,\r\n  Screens\r\n}","// npm i --no-optional\r\n\r\n// https://itnext.io/fixing-security-vulnerabilities-in-npm-dependencies-in-less-than-3-mins-a53af735261d\r\n// npm i minimist --save-dev\r\n// \"resolutions\": {\r\n//   \"minimist\": \"^1.2.5\"\r\n// }\r\n// \"scripts\": {\r\n//   \"preinstall\": \"npx npm-force-resolutions\"\r\n// }\r\n// npm i\r\n\r\n// TODO: autofocus map\r\n// TODO: Inputs.js for everything\r\n// TODO: Google Maps already loaded outside @googlemaps/js-api-loader.\r\n// TODO: Editable crops/prices\r\n// TODO: https://wlazarus.cfans.umn.edu/william-f-lazarus-farm-machinery-management\r\n// TODO: MACHDATA\r\n// TODO: Plant Data Service:  Disregard, build own\r\n\r\n// WAIT: Soil Erosion Control\r\n// WAIT: Additional Considerations\r\n\r\n// DONE: material-ui -> mui\r\n// DONE: Don't autofill\r\n// DONE: npm install warnings\r\n// DONE: npm audit warnings\r\n// DONE: Autocomplete height\r\n// DONE: Next to Resources, Back should be Revenue Impact\r\n// DONE: Warning: Cannot update a component (`App`) while rendering a different component (`Screens`).\r\n\r\nimport React from 'react';\r\nimport './App.css';\r\nimport {Screens} from './components/Navigation';\r\nimport {defaults} from './defaults';\r\n\r\nconst App = () => {\r\n  const updateSpeciesTotal = () => {\r\n    let total = 0;\r\n    parms.species.forEach((s, n) => {\r\n      if (s) {\r\n        total += (+parms.rates[n] || 0) * (+parms.prices[n] || 0)\r\n      }\r\n    });\r\n    set.coverCropTotal(total);\r\n  } // updateSpeciesTotal\r\n\r\n  const updateCosts = (otype) => {\r\n    const type = otype.match(/[a-z]+/g)[0];\r\n\r\n    let data;\r\n    let power;\r\n    let acresHour;\r\n\r\n    const implementCost = (desc) => {\r\n      if (parms[type + 'ImplementCost'] === 'false') {\r\n        return 0;\r\n      }\r\n\r\n      let result;\r\n\r\n      if (data[desc]) {\r\n        result = +data[desc];\r\n      } else {\r\n        result = 0;\r\n      }\r\n  \r\n      if (desc === 'Labor') {\r\n        result *= db.rates.skilled.value;\r\n      }\r\n\r\n      return result;\r\n    } // implementCost\r\n  \r\n    const powerCost = (desc) => {\r\n      if (parms[type + 'PowerCost'] === 'false') {\r\n        return 0;\r\n      }\r\n\r\n      let result;\r\n  \r\n      result = desc === 'Labor' ? 0 :\r\n               desc === 'Fuel'  ? (power['Fuel'] * (1 + +db.rates.lubrication.value)) * db.rates.fuel.value / acresHour :\r\n                                  power[desc] / acresHour;\r\n  \r\n      return result;\r\n    } // powerCost\r\n  \r\n    const totalCost = (desc) => {\r\n      return (implementCost(desc) || 0) + (powerCost(desc) || 0);\r\n    } // totalCost\r\n  \r\n    const relevantCost = (desc) => {\r\n      return parms[type + desc] === 'true' ? totalCost(desc) : 0;\r\n    } // relevantCost\r\n\r\n    data = db.implements[parms[type + 4]];\r\n\r\n    if (!data) {\r\n      return;\r\n    }\r\n\r\n    const powerUnit = parms[type + 'Power'] || data['default power unit'];\r\n\r\n    power = db.power[powerUnit] || {};\r\n\r\n    set[type + 'AnnualUseAcres'](Math.round(data['acres/year']));\r\n    set[type + 'AnnualUseHours'](power['expected use (hr/yr)']);\r\n\r\n    acresHour  = (+data['acres/hour']).toFixed(1);\r\n    set[type + 'AcresHour'](acresHour);\r\n\r\n    const totalRelevantCost = () => (\r\n      relevantCost('Labor') +\r\n      relevantCost('Fuel') +\r\n      relevantCost('Depreciation') +\r\n      relevantCost('Interest') + \r\n      relevantCost('Repairs') + \r\n      relevantCost('Taxes') + \r\n      relevantCost('Insurance') + \r\n      relevantCost('Storage')\r\n    ); // totalRelevantCost\r\n\r\n    const costdb = {\r\n      seedbed: 'Seedbed preparation',\r\n      planting: 'Planting'\r\n    }[type];\r\n\r\n    const total = parms[type + 3] === 'Self' ? totalRelevantCost(type).toFixed(2) : db.costDefaults[costdb].cost;\r\n\r\n    set[type + 'Estimated'](total);\r\n    set[type + 'Total'](total);\r\n    if (type === 'termination') {\r\n      set[type + 'ChemicalCost'](total);\r\n    }\r\n  } // updateCosts\r\n\r\n  const testSeedbed = () => {\r\n    if (parms.seedbed1 === 'No' || parms.seedbed2 === 'Yes') {\r\n      set.seedbed4('');\r\n      set.seedbedTotal(0);\r\n      set.screen('Planting');\r\n      set.previousScreen('Planting');\r\n    }\r\n  } // testSeedbed\r\n\r\n  const powerUnits = (parm) => {\r\n    try {\r\n      const type = parm.replace('4', '');\r\n      const value = parms[parm];\r\n\r\n      const data = db.implements[value] || {};\r\n\r\n      const powerUnit = data['default power unit']; //.match(/\\d+/)[0];\r\n      set[type + 'Total'](0);  // clear override so it can be recalculated\r\n      set[type + 'Power'](powerUnit);\r\n      updateCosts(type);\r\n    } catch(ee) {\r\n      console.log(parm, ee.message);\r\n    }\r\n  } // powerUnits\r\n\r\n  const dbvalue = (table, key, parm) => {\r\n    return db[table][key] ? db[table][key][parm] : '';\r\n  } // dbvalue\r\n\r\n  const updateTermination = (otype) => {\r\n    switch (otype) {\r\n      case 'terminationMethod' :\r\n        break;\r\n      case 'terminationProduct' :\r\n        set.terminationUnitCost(dbvalue('herbicides', parms.terminationProduct, 'Cost ($)'));\r\n        set.terminationUnit    (dbvalue('herbicides', parms.terminationProduct, 'Unit (cost)'));\r\n        set.terminationRate    (dbvalue('herbicides', parms.terminationProduct, 'Rate'));\r\n        set.terminationRateUnit(dbvalue('herbicides', parms.terminationProduct, 'Unit (rate)'));\r\n        break;\r\n      case 'terminationUnitCost' :\r\n      case 'terminationRate' :\r\n        set.terminationProductCost((parms.terminationUnitCost * parms.terminationRate).toFixed(2));\r\n        break;\r\n      case 'termination4' :\r\n        set.terminationChemicalCost(parms.terminationTotal);\r\n        break;\r\n      default: ;\r\n    }\r\n  } // updateTermination\r\n\r\n  const change = (parm, value, target, index) => {\r\n    if (/(Labor|Fuel|Depreciation|Interest|Repairs|Taxes|Insurance|Storage|ImplementCost|PowerCost)$/.test(parm)) {\r\n      const type = parm.match(/[a-z]+/)\r\n      set[type + 'Total'](0);\r\n      set[parm](target.checked ? 'true' : 'false');\r\n    } else if (parm === 'species') {\r\n      set.species(arr => {\r\n        arr[index] = value;\r\n        return [...arr];\r\n      });\r\n\r\n      set.rates(arr => {\r\n        arr[index] = (db.seedList[value] || {}).seedingRate;\r\n        return [...arr];\r\n      });\r\n\r\n      set.prices(arr => {\r\n        arr[index] = (db.seedList[value] || {}).price;\r\n        return [...arr];\r\n      });\r\n    }\r\n  } // change\r\n\r\n  let {parms, set, props} = defaults(\r\n    change,\r\n    {\r\n      species             : [],\r\n      rates               : [],\r\n      prices              : [],\r\n      coverCropTotal      : 0,\r\n      USDARegion          : '',\r\n      \r\n      seedbed1            : '', // 'Yes',\r\n      seedbed2            : 'No',\r\n      seedbed3            : 'Self',\r\n      seedbed4            : '',  // 'Chisel Plow; 37 Ft'\r\n      seedbed7            : '',\r\n      \r\n      planting3           : 'Self',\r\n      planting4           : '',\r\n      planting7           : '',\r\n\r\n      termination2        : 'No', // 'No',\r\n      termination3        : 'Self', // 'Self'\r\n      terminationMethod   : 'Herbicide application', // 'Herbicide application'\r\n      terminationProduct  : 'liberty', // 'liberty'\r\n      terminationUnitCost : '',\r\n      terminationUnit     : '',\r\n      terminationRate     : '',\r\n      terminationRateUnit : '',\r\n      terminationProductCost : '',\r\n      terminationCustomCost  : '',\r\n      termination4            : '',\r\n      terminationChemicalCost : '',\r\n\r\n      seedbedLabor            : 'true',\r\n      seedbedFuel             : 'true',\r\n      seedbedDepreciation     : 'true',\r\n      seedbedInterest         : 'true',\r\n      seedbedRepairs          : 'true',\r\n      seedbedTaxes            : 'true',\r\n      seedbedInsurance        : 'true',\r\n      seedbedStorage          : 'true',\r\n      seedbedImplementCost    : 'true',\r\n      seedbedPowerCost        : 'true',\r\n      seedbedPower            : '',\r\n      seedbedAnnualUseAcres   : 0,\r\n      seedbedAnnualUseHours   : 0,\r\n      seedbedAcresHour        : 0,\r\n      seedbedEstimated        : 0,\r\n      seedbedTotal            : 0,\r\n      \r\n      plantingLabor           : 'true',\r\n      plantingFuel            : 'true',\r\n      plantingDepreciation    : 'true',\r\n      plantingInterest        : 'true',\r\n      plantingRepairs         : 'true',\r\n      plantingTaxes           : 'true',\r\n      plantingInsurance       : 'true',\r\n      plantingStorage         : 'true',\r\n      plantingImplementCost   : 'true',\r\n      plantingPowerCost       : 'true',\r\n      plantingPower           : '',\r\n      plantingAnnualUseAcres  : 0,\r\n      plantingAnnualUseHours  : 0,\r\n      plantingAcresHour       : 0,\r\n      plantingEstimated       : 0,\r\n      plantingTotal           : 0,\r\n\r\n      terminationLabor           : 'true',\r\n      terminationFuel            : 'true',\r\n      terminationDepreciation    : 'true',\r\n      terminationInterest        : 'true',\r\n      terminationRepairs         : 'true',\r\n      terminationTaxes           : 'true',\r\n      terminationInsurance       : 'true',\r\n      terminationStorage         : 'true',\r\n      terminationImplementCost   : 'true',\r\n      terminationPowerCost       : 'true',\r\n      terminationPower           : '',\r\n      terminationAnnualUseAcres  : 0,\r\n      terminationAnnualUseHours  : 0,\r\n      terminationAcresHour       : 0,\r\n      terminationEstimated       : 0,\r\n      terminationTotal           : 0,\r\n      \r\n      farm                : '',\r\n      acres               : '',\r\n      description         : '',\r\n      priorCrop           : '',\r\n      otherPriorCrop      : '',\r\n      cashCrop            : '',\r\n      otherCashCrop       : '',\r\n      labor               : '',\r\n      previousScreen      : 'Home',\r\n      effects: {\r\n        species                 : updateSpeciesTotal,\r\n        rates                   : updateSpeciesTotal,\r\n        prices                  : updateSpeciesTotal,\r\n\r\n        seedbed1                : testSeedbed,\r\n        seedbed2                : testSeedbed,\r\n\r\n        seedbed4                : powerUnits,\r\n        planting4               : powerUnits,\r\n        termination4            : [powerUnits, updateCosts, updateTermination],\r\n\r\n        seedbedLabor            : updateCosts,\r\n        seedbedFuel             : updateCosts,\r\n        seedbedDepreciation     : updateCosts,\r\n        seedbedInterest         : updateCosts,\r\n        seedbedRepairs          : updateCosts,\r\n        seedbedTaxes            : updateCosts,\r\n        seedbedInsurance        : updateCosts,\r\n        seedbedStorage          : updateCosts,\r\n        seedbedPower            : updateCosts,\r\n        seedbedImplementCost    : updateCosts,\r\n        seedbedPowerCost        : updateCosts,\r\n        \r\n        plantingLabor           : updateCosts,\r\n        plantingFuel            : updateCosts,\r\n        plantingDepreciation    : updateCosts,\r\n        plantingInterest        : updateCosts,\r\n        plantingRepairs         : updateCosts,\r\n        plantingTaxes           : updateCosts,\r\n        plantingInsurance       : updateCosts,\r\n        plantingStorage         : updateCosts,\r\n        plantingPower           : updateCosts,\r\n        plantingImplementCost   : updateCosts,\r\n        plantingPowerCost       : updateCosts,\r\n\r\n        terminationLabor        : updateCosts,\r\n        terminationFuel         : updateCosts,\r\n        terminationDepreciation : updateCosts,\r\n        terminationInterest     : updateCosts,\r\n        terminationRepairs      : updateCosts,\r\n        terminationTaxes        : updateCosts,\r\n        terminationInsurance    : updateCosts,\r\n        terminationStorage      : updateCosts,\r\n        terminationPower        : updateCosts,\r\n        terminationImplementCost: updateCosts,\r\n        terminationPowerCost    : updateCosts,\r\n\r\n        terminationMethod       : updateTermination,\r\n        terminationProduct      : updateTermination,\r\n        terminationUnitCost     : updateTermination,\r\n        terminationRate         : updateTermination,\r\n      }\r\n    }\r\n  );\r\n\r\n  return (\r\n    <Screens set={set} db={db} parms={parms} props={props} />\r\n  );\r\n} // App\r\n\r\ndocument.title = 'Econ DST';\r\n\r\n// const holdError = console.error;\r\n// console.error = (msg, ...subst) => {\r\n//   if (!/You provided a/.test(msg)) {\r\n//     holdError(msg, ...subst)\r\n//   }\r\n// }\r\n\r\nconst loadData = async(table) => {\r\n  const alias = (col) => {\r\n    // 'Typical Seeding Rate (lb/ac) [seedingRate]' becomes 'seedingRate'\r\n    return col.includes('[') ? col.split(/[[\\]]/)[1] : col;\r\n  }\r\n\r\n  db[table] = {};\r\n\r\n  let response = await fetch(`https://api.airtable.com/v0/appRBt6oxz1E9v2F4/${table}?api_key=keySO0dHQzGVaSZp2`);\r\n  let rec = await response.json();\r\n\r\n  const data = rec.records.map(r => r.fields);\r\n\r\n  data.forEach(rec => {\r\n    const cols = Object.keys(rec);\r\n    const obj = db[table][rec.key] = {};\r\n    cols.forEach(col => {\r\n      obj[alias(col)] = rec[col];\r\n    });\r\n  });\r\n\r\n  if (/implements|power/.test(table)) {\r\n    Object.keys(db[table]).forEach(key => {\r\n      const c = db[table][key];\r\n\r\n      if (!c) {\r\n        alert(`${table} ${key}`);\r\n      }\r\n\r\n      try {\r\n        c.RF1 = db.coefficients[c['default ASABE category']].RF1 || 0;\r\n        c.RF2 = db.coefficients[c['default ASABE category']].RF2 || 0;\r\n        c.RV1 = db.coefficients[c['default ASABE category']].RV1 || 0;\r\n        c.RV2 = db.coefficients[c['default ASABE category']].RV2 || 0;\r\n        c.RV3 = db.coefficients[c['default ASABE category']].RV3 || 0;\r\n        c.RV4 = db.coefficients[c['default ASABE category']].RV4 || 0;\r\n        c.RV5 = db.coefficients[c['default ASABE category']].RV5 || 0;\r\n      } catch(ee) {\r\n        alert(c['default ASABE category']);\r\n      }\r\n\r\n      c['tradein%'] = (c.RV1 - c.RV2 * c['expected life (years)'] ** 0.5 - c.RV3 * c['expected use (hr/yr)'] ** 0.5 + c.RV4 * db.rates.projected.value) ** 2 + 0.25 * c.RV5;\r\n      c['listprice'] = c['purchase price 2020'] / (1 - c['list discount']);\r\n      c['tradein$'] = c['tradein%'] * c['listprice'];\r\n      c['annualdepreciation'] = (c['purchase price 2020'] - c['tradein$']) / c['expected life (years)'];\r\n      c['accumulatedrepairs'] = c['listprice'] * (c.RF1 * (c['expected life (years)'] * c['expected use (hr/yr)'] / 1000) ** c.RF2);\r\n      c['annualrepairs'] = c['accumulatedrepairs'] / c['expected life (years)'];\r\n\r\n      if (table === 'implements') {\r\n        c['acres/hour'] = c.size1 * c['field speed (m/h)'] * c['field efficiency'] / db.rates.conversion.value;\r\n        c['acres/year'] = c['acres/hour'] * c['expected use (hr/yr)'];\r\n      }\r\n      \r\n      const divisor = table === 'implements' ? c['acres/year'] : c['expected use (hr/yr)'];\r\n      c['Depreciation'] = c['annualdepreciation'] / divisor;\r\n      c['Interest'] = (c['purchase price 2020'] + c['tradein$'] + c['annualdepreciation']) / 2 * db.rates.interest.value / divisor;\r\n      c['Repairs'] = c['annualrepairs'] / divisor;\r\n      c['Taxes'] = (c['purchase price 2020'] + c['tradein$'] + c['annualdepreciation']) / 2 * db.rates.property.value / divisor;\r\n      c['Insurance'] = (c['purchase price 2020'] + c['tradein$'] + c['annualdepreciation']) / 2 * db.rates.insurance.value / divisor;\r\n\r\n      if (table === 'implements') {\r\n        c['Labor'] = (c['tractor (hr/impl)'] * c['labor (hr/trac)']) / c['acres/hour'];\r\n      }\r\n\r\n      if (table === 'power') {\r\n        c['Fuel'] = +(c['HP'] * c['fuel use (gal/PTO hp/hr)']).toFixed(2);\r\n      }\r\n\r\n      c['Storage'] = db.rates.storage.value * c['shed (ft^2)'] / divisor;\r\n      // console.log(key);\r\n      // console.log(c);\r\n    });\r\n\r\n    // console.log(db.implements);\r\n    // console.log(db.implements['Boom Sprayer, Self-Propelled; 90 Ft']);\r\n\r\n    if (db.power && db.power['130 Self Propelled']) {\r\n      const d = db.power['130 Self Propelled'];\r\n      Object.keys(d).forEach(key => {\r\n        if (d[key] !== d[key]) {  // Only way to check for NaN; but triggers \"no-self-compare\" warning\r\n          d[key] = 0;\r\n        }\r\n      });\r\n      console.log(db.power['130 Self Propelled']);\r\n    }\r\n  }\r\n} // loadData\r\n\r\nconst db = {};\r\n\r\nloadData('coefficients');\r\nloadData('seedList');\r\nloadData('costDefaults');\r\nloadData('rates');\r\nloadData('stateRegions');\r\nloadData('herbicides');\r\nloadData('power');\r\nloadData('implements');\r\n\r\nexport default App;\r\n","import {useEffect, useState} from 'react';\n\nconst defaults = (change, p) => {\n  const set = {};\n\n  const parms = {  // default parameters\n    screen    : 'Home',\n    help      : '',\n    helpX     : 0,\n    helpY     : 0,\n    mapZoom   : 13,\n    mapType   : 'hybrid',\n    lat       : 40.7849,\n    lon       : -74.8073,\n    location  : '',\n    state     : '',\n    ...p\n  }\n\n  Object.keys(parms).forEach(parm => {\n    if (parm !== 'effects') {\n      [parms[parm], set[parm]] = useState(parms[parm]);\n      // useEffect(change, [parms[parm]]);\n    }\n  });\n\n  if (p.effects) {\n    Object.keys(p.effects).forEach(key => {\n      useEffect(() => {\n        [].concat(p.effects[key]).forEach(fnc => {\n          fnc(key);\n        })\n      }, [key, parms[key]]);\n    }); \n  }\n\n  const props = (parm) => ({\n    id: parm,                                         // allows the parameter to be styled in CSS\n    parms: parms,                                     // saves the need to pass parms to each component\n    value: parms[parm] || '',                         // the parameter's current value\n    checked: parms[parm] === 'true',                  // handle checkboxes\n    set: set,                                         // the parameter's useState function\n    onChange: ({target}, value=target.value, index) => {\n      if (value !== null) {\n        value = value.value || value.label || value;  // Autocomplete\n      }\n\n      if (Array.isArray(parms[parm]) && isFinite(index)) {\n        set[parm](arr => {\n          arr[index] = value;\n          return [...arr];\n        });\n      } else {\n        set[parm](value);\n      }\n\n      console.log(parm, value);\n\n      try {\n        change(parm, value, target, index);\n      } catch(ee) {\n        console.log(parm, ee.message);\n      }\n    }\n  }); // props\n\n  return {\n    parms,\n    set,\n    props\n  }\n} // defaults\n\nexport {\n  defaults\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}